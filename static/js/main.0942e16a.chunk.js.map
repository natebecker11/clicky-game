{"version":3,"sources":["assets sync /^/.*$","assets/arya.jpg","assets/brienne.jpg","assets/cersei.jpg","assets/dany.jpg","assets/drogon.jpg","assets/hound.jpg","assets/jaime.jpg","assets/jon.jpg","assets/mel.jpg","assets/ned.jpg","assets/sansa.jpg","assets/tyrion.jpg","components/MainNav.js","components/ClickPic.js","App.js","serviceWorker.js","index.js"],"names":["map","./arya.jpg","./brienne.jpg","./cersei.jpg","./chars","./chars.json","./dany.jpg","./drogon.jpg","./hound.jpg","./jaime.jpg","./jon.jpg","./mel.jpg","./ned.jpg","./sansa.jpg","./tyrion.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","MainNav","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","fixed","light","expand","href","onClick","navbar","className","children","score","topScore","React","Component","ClickPic","clicked","top","width","data-name","src","require","concat","alt","name","App","charPics","JSON","parse","stringify","chars","marqueeText","incScore","resetScore","resetAllScores","shuffleArray","array","i","length","j","Math","floor","random","_ref","setShuffledArray","event","arrayCopy","slice","clickedCharIndex","findIndex","char","target","dataset","marquee","document","querySelector","shakenDiv","classList","add","setTimeout","remove","_this2","MainNav_MainNav","ClickPic_ClickPic","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0942e16a.chunk.js","sourcesContent":["var map = {\n\t\"./arya.jpg\": 30,\n\t\"./brienne.jpg\": 31,\n\t\"./cersei.jpg\": 32,\n\t\"./chars\": 10,\n\t\"./chars.json\": 10,\n\t\"./dany.jpg\": 33,\n\t\"./drogon.jpg\": 34,\n\t\"./hound.jpg\": 35,\n\t\"./jaime.jpg\": 36,\n\t\"./jon.jpg\": 37,\n\t\"./mel.jpg\": 38,\n\t\"./ned.jpg\": 39,\n\t\"./sansa.jpg\": 40,\n\t\"./tyrion.jpg\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/arya.fc928649.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brienne.24915351.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cersei.f5e8e23d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dany.be7f977e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drogon.8eb98373.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hound.22990f27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jaime.f4146861.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jon.c91d7d4e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mel.d4acda47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ned.4cfe736f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sansa.19649932.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tyrion.1f45ac00.jpg\";","import React from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem } from 'reactstrap';\r\n\r\n  export default class MainNav extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n        isOpen: false\r\n      };\r\n    }\r\n    toggle() {\r\n      this.setState({\r\n        isOpen: !this.state.isOpen\r\n      });\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Navbar color=\"light\" fixed=\"top\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\">a game of clicks</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <span className=\"navbar-text mr-1\">Score: {this.props.children.score} |</span>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <span className=\"navbar-text\">Top Score: {this.props.children.topScore}</span>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { Card, CardImg } from 'reactstrap';\r\n\r\n\r\nexport default class ClickPic extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  state = {\r\n    clicked: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div   className=\"col-12 col-sm-6 col-md-4 col-lg-3\">\r\n    \r\n  <div>\r\n    <Card className=\"mt-2 mb-2\">\r\n      <CardImg \r\n        className=\"img-thumbnail grower\"\r\n        top \r\n        width=\"100%\" \r\n        onClick={this.props.onClick} \r\n        data-name={this.props.children.src} \r\n        src={require(`../assets/${this.props.children.src}`)} alt={`Image of ${this.props.children.name}`} />\r\n    </Card>\r\n  </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport MainNav from './components/MainNav'\nimport ClickPic from './components/ClickPic'\nimport { Jumbotron } from 'reactstrap';\nimport chars from './assets/chars.json'\n\nimport './App.css';\n\nclass App extends Component {\n  \n  state = {\n    score: 0,\n    topScore: 0,\n    charPics: JSON.parse(JSON.stringify(chars)),\n    marqueeText: \"Click an image to begin! Don't click the same one twice!\"\n  }\n\n  incScore = () => {\n    this.setState({\n      score: this.state.score + 1\n    })\n    if (this.state.topScore <= this.state.score) {\n      this.setState({\n        topScore: this.state.score + 1\n      })\n    }\n  }\n\n  resetScore = () => {\n    this.setState({\n      score: 0\n    })\n  }\n\n  resetAllScores = () => {\n    this.setState({\n      score: 0,\n      topScore: 0\n    })\n  }\n\n  shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  setShuffledArray = (event) => {\n    if (this.state.score === 11) {\n      return this.setState({\n        marqueeText: \"WINNER!!!!!\",\n        score: 12,\n        topScore: 12\n      })\n    }\n    let arrayCopy = this.state.charPics.slice(0)\n    const clickedCharIndex = arrayCopy.findIndex(char => char.src === event.target.dataset.name)\n    const marquee = document.querySelector('#marquee')\n    const shakenDiv = document.querySelector('#shakenDiv')\n    if (arrayCopy[clickedCharIndex].clicked) {\n      marquee.classList.add('blinkI')\n      shakenDiv.classList.add('shake')\n      setTimeout(() => {\n        marquee.classList.remove('blinkI')\n        shakenDiv.classList.remove('shake')\n      }, 1000)\n      return this.setState({\n        score: 0,\n        marqueeText: 'You guessed incorrectly!',\n        charPics: JSON.parse(JSON.stringify(chars))\n      })\n    }\n    arrayCopy[clickedCharIndex].clicked = true\n    marquee.classList.add('blinkC')\n    setTimeout(() => {\n      marquee.classList.remove('blinkC')\n    }, 1000)\n    this.shuffleArray(arrayCopy)\n    this.incScore()\n    this.setState({\n      charPics: arrayCopy,\n      marqueeText: 'You guessed correctly!'\n\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MainNav>{\n          {\n            score: this.state.score,\n            topScore: this.state.topScore,\n          }\n        }</MainNav>\n        <div>\n          <Jumbotron>\n            <h1 className=\"display-3\">A Game Of Clicks</h1>\n            <p className=\"lead\">In The Game Of Clicks, You Either Click... Or You Don't.</p>\n\n          </Jumbotron>\n        </div>\n        <div className=\"container\">\n        <h2 id=\"marquee\" className=\"font-weight-bold\">{\n              this.state.marqueeText\n            }</h2>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\" id='shakenDiv'>\n            {this.state.charPics.map(char => <ClickPic onClick={this.setShuffledArray} key={char.src}>{char}</ClickPic>)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}